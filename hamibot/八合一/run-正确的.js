42["script:run", {
    "id": "670b94a2266948a4a59d4a51",
    "name": "670b94a2266948a4a59d4a51",
    "text": "\nconst hamibot={env:{task_type:[\"random_task\",\"check_restart\",\"ks_js_open\",\"ks_js_sign\",\"ks_js_advertisement\",\"ks_js_open_box\",\"ks_js_live\",\"ks_js_shopping\",\"ks_js_luck_draw\",\"ks_js_novel\",\"ks_js_earn_coin\",\"ks_js_meal_allowance\",\"ks_js_video\",\"ks_js_force_kill\",\"ks_js_clear_apps\",\"ks_pt_open\",\"ks_pt_sign\",\"ks_pt_advertisement\",\"ks_pt_open_box\",\"ks_pt_live\",\"ks_pt_shopping\",\"ks_pt_luck_draw\",\"ks_pt_earn_coin\",\"ks_pt_meal_allowance\",\"ks_pt_follow_user\",\"ks_pt_comment_works\",\"ks_pt_like_works\",\"ks_pt_video\",\"ks_pt_force_kill\",\"ks_pt_clear_apps\",\"dy_js_open\",\"dy_js_task_no_check\",\"dy_js_sign\",\"dy_js_open_box\",\"dy_js_advertisement\",\"dy_js_live\",\"dy_js_shopping\",\"dy_js_video\",\"dy_js_force_kill\",\"dy_js_clear_apps\",\"bd_js_open\",\"bd_js_sign\",\"bd_js_open_box\",\"bd_js_advertisement\",\"bd_js_search\",\"bd_js_novel\",\"bd_js_video\",\"bd_js_article\",\"bd_js_clear_apps\",\"bd_dz_open\",\"bd_dz_sign\",\"bd_dz_open_box\",\"bd_dz_advertisement\",\"bd_dz_search\",\"bd_dz_video\",\"bd_dz_force_kill\",\"bd_dz_clear_apps\",\"hksp_js_open\",\"hksp_js_sign\",\"hksp_js_open_box\",\"hksp_js_advertisement\",\"hksp_js_video\",\"hksp_js_force_kill\",\"hksp_js_clear_apps\",\"xgsp_open\",\"xgsp_sign\",\"xgsp_open_box\",\"xgsp_advertisement\",\"xgsp_video\",\"xgsp_force_kill\",\"xgsp_clear_apps\",\"jrtt_js_open\",\"jrtt_js_sign\",\"jrtt_js_open_box\",\"jrtt_js_advertisement\",\"jrtt_js_live\",\"jrtt_js_shopping\",\"jrtt_js_video\",\"jrtt_js_force_kill\",\"jrtt_js_clear_apps\",\"bd_js_open_card\",\"bd_dz_open_card\",\"xgsp_meal_allowance\",\"recongnize_open\",\"bd_js_rec_coin\",\"keep_update\",\"ks_js_follow\",\"ks_js_search_keywords\",\"ks_js_send_friend_coin\",\"ks_js_novel_new\",\"dy_js_meal_allowance\",\"dy_js_novel\",\"dy_js_listen_book\",\"dy_js_subscribe_coin\",\"dy_js_watch_assigned_video\",\"ks_js_subscribe_coin\",\"ks_js_rise_or_sleep\"],search_apps:\"拼多多，冷运宝货主版，花娃，爱奇艺体育，京东极速版，小野猫直播，百变大侦探-剧本杀，4399游戏盒，贝乐虎儿歌，宝宝树孕育，阿拉德，汇丰汇选，美柚，搜狐视频，水母动漫，巴雄天下，域鉴，倩女幽魂，虫虫助手，B612咔叽，建行生活，快看，涨乐财富通，淘特，好游快爆，红豆免费小说，小游戏集合，哔哩哔哩，王者荣耀，百万红包，热血高爆版，传奇变态版，科企岛，知乎，虎牙直播，西瓜视频，问道，七读，准点天气，阅友免费小说，我叫MT：归来，京东，阿拉德手游，点淘，得物，京东特价版，妈妈网孕育，得间免费小说，得间免费小说极速版，逍遥情缘，叮咚租物，玩吧，彩视，汽车之家，美团，京喜，蛋啵，对庄翡翠，YY，微拍堂，花伍，运满满货主，婚礼纪，书旗小说，彩云日历，MOMO陌陌，花椒直播，仙境传奇，运满满货主，阿米游，偷吃点心，运满满司机，九灵神域，铜雀三国，梦仙灵，光明冒险，芒果斗地主，途游斗地主（比赛版），山海经异兽录，驯龙物语，超能世界，珍爱，一刻相册，西五街，我们的沙城，阿拉德之陆，TapTap\",video_comments:\"你好，不错，太好了，主播真棒，哈哈，我也来看看\",task_num:\"-1\",novel_duration:\"10\",max_time:\"15\",n_time:\"10\",bd_js_n_time:\"10\",min_time:\"10\",open_min_time:\"35\",open_max_time:\"60\",image_threshold:\"0.9\",APP_ENV:\"production\",USER_ID:\"6655d208c7ff5493883c4a42\",ROBOT_ID:\"670b956006081ca4a4674e3b\",SCRIPT_ID:\"670b94a2266948a4a59d4a51\",TIMESTAMP:\"2024-10-13 17:40:18\"},plan:{name:\"体验版\",onFreeTrial:true,model:\"flatRate\"},robotName:\"琼浆大蒜\",scriptName:\"【聚合大师】（八合一版）\",};\nhamibot.postMessage=function(){};hamibot.exit=function(){exit();};Object.freeze(hamibot.env);Object.freeze(hamibot.plan);Object.freeze(hamibot);\n/**\n * 快手极速、快手普通、抖音极速、百度极速、百度大字、好看视频极速、西瓜视频、今日头条极速版合集（养号版）\n */\nconst config_file = './config/hamibot/combine/config_hamibot_ks_dy_bd_xg_tt'\n\n/**\n * 脚本资源节点\n */\nconst resource_url_array = [\n    \"https://auto-hamibot-res-1309032940.cos-website.ap-chengdu.myqcloud.com/public/%s\",\n    \"https://auto-hamibot-res.vercel.app/%s\",\n    \"https://bzjl.gitee.io/auto_hamibot_res/%s\",\n    \"http://82.156.132.121/public/%s\",\n]\n/**\n * 请求资源最大超时时间\n */\nlet request_time_out = 3000\n\nlet script_url = \"\"\n\nlet init_file = 'executor_new'\n\nlet config_resolver_file = 'config_resolver'\n\nlet cst_config\n\n// 本地调试环境下，不会从云端下载脚本\nconst is_debug = false\n\nrun()\n\nfunction run() {\n    createListener()\n    toastLog('请稍等，正在加载资源.....')\n\n    script_url = testConnect()\n    if (!script_url) {\n        localRun()\n        return\n    }\n  \n    // 加载配置\n    if (config_file) {\n        toastLog('加载配置......')\n        autoImportMoudles([config_file, config_resolver_file])\n        resolveConfig()\n        storageConfig(config_resolver_file)\n\n        if (cst_config && cst_config.import_moudles) {\n            autoImportMoudles(cst_config.import_moudles)\n        }\n    }\n    // 执行主函数\n    if (init_file) {\n        toastLog('执行主函数......')\n        autoImportMoudles([init_file])\n\n        if (cst_config.is_init_ui) {\n            engines.execScriptFile(init_file + '.js')\n        } else {\n            let executor = require('./' + init_file + '.js')\n            executor.execute()\n        }\n    }\n    \n    // destory(import_moudles_arr)\n}\n/**\n * 创建监听器\n */\nfunction createListener() {\n    threads.start(function () {\n        events.on(\"stop\", function () {\n            stopOtherEngines()\n        })\n\n        events.on(\"exit\", function () {\n            stopOtherEngines()\n        })\n    });\n}\n\n/**\n * 自动导入下载所需模块脚本\n * @param {*} import_moudles \n */\nfunction autoImportMoudles(import_moudles_arr) {\n    if (is_debug) {\n        return\n    }\n    if (!import_moudles_arr || import_moudles_arr.length == 0) {\n        return\n    }\n    for (let i = 0; i < import_moudles_arr.length; i++) {\n        let import_moudle_name = import_moudles_arr[i] + '.js'\n        let script_path = downloadScript(import_moudle_name)\n        if (!script_path) {\n            // 如果下载失败，尝试重新下载\n            let script_path = downloadScript(script_url, import_moudle_name)\n            if (!script_path) {\n                console.error('网络不稳定，脚本下载失败，请尝试调整网络后重新下载！')\n                exit()\n            }\n        }\n    }\n}\n\nfunction resolveConfig() {\n    let config_resolver = require(config_resolver_file + '.js')\n    let config_obj = require(config_file + '.js')\n    cst_config = config_resolver.resolve(config_obj)\n}\n\nfunction storageConfig(config_file) {\n    let env_config\n    try {\n        env_config = JSON.parse(JSON.stringify(hamibot.env))\n    } catch (err) {\n    }\n\n    if (!env_config) {\n        // 如果 hamibot中没有，则取autojs的配置\n        // 自定义实现\n    }\n\t\t// 把总链接也放到本地存储中\n    env_config.script_url = script_url\n    let storage = storages.create(\"app_config\")\n    storage.put(\"global_config\", env_config)\n    storage.put(\"config_path\", './' + config_file + '.js')\n}\n\n/**\n * 清理函数\n * @param {*} import_moudles \n * @returns \n */\nfunction destory(import_moudles) {\n    if (!import_moudles || import_moudles.length == 0) {\n        return\n    }\n\n    for (let i = 0; i < import_moudles.length; i++) {\n        let import_moudle_name = import_moudles[i] + '.js'\n        if (isScriptExist(import_moudle_name)) {\n            // 文件删除\n            files.remove(import_moudle_name)\n        }\n    }\n}\n\n\n/**\n * 判断该模块脚本在本地是否存在\n * @param {*} script_moudle_name \n * @returns \n */\nfunction isScriptExist(script_moudle_name) {\n    if (files.exists('./' + script_moudle_name)) {\n        return true\n    } else {\n        return false\n    }\n}\n\n/**\n * 下载脚本\n * @param {*} scriptName \n * @returns \n */\nfunction downloadScript(scriptName) {\n    // 查找指定名字脚本的下载链接\n    var scriptUrl = util.format(script_url, scriptName)\n    var url = encodeURI(scriptUrl)\n    var r = http.get(url, {\n        headers: {\n            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'\n        }\n    }).body.string()\n    var scriptPath = files.cwd() + '/' + scriptName\n    let createdDirs = files.createWithDirs(scriptPath)\n    files.write(scriptPath, r)\n    return scriptPath\n}\n\nfunction testConnect() {\n    http.__okhttp__.setTimeout(request_time_out);   // 设置全局默认超时时间为n秒\n    for (let i = 0; i < resource_url_array.length; i++) {\n        let resource_url = resource_url_array[i]\n        let scriptUrl = util.format(resource_url, \"executor.js\")\n        let url = encodeURI(scriptUrl)\n        log('正在尝试节点' + Number(i+1))\n        try {\n            let response = http.get(url, {\n                headers: {\n                    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\n                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'\n                }\n            })\n            if(response.statusCode == 200) {\n                console.info('当前资源节点通畅！')\n                return resource_url;\n            }\n        } catch (error) {\n            console.error('当前资源节点不通，尝试切换下一节点！')\n            continue;\n        }\n        \n    }\n    console.error(\"当前暂无可用资源节点，请检查网络后重新运行脚本\")\n    return \"\";\n}\n\nfunction localRun() {\n  \tlog('尝试本地加载')\n    try {\n        let executor = require('./' + init_file + '.js')\n        executor.execute()\n    } catch (error) {\n        console.error(\"本地暂无可加载资源，请加群联系管理\")\n    }\n}\n\n/**\n * 结束其他所有脚本\n */\nfunction stopOtherEngines() {\n    console.hide()\n    /*let current_engine = engines.myEngine();\n    let all_engines = engines.all();\n    toastLog(\"正在运行的脚本有\", all_engines.length, \"个\");\n    for (let i = 0; i < all_engines.length; i++) {\n        let engine_ele = all_engines[i]\n        if (engine_ele.toString() != current_engine.toString()) {\n            engine_ele.forceStop();\n        }\n    }\n    toastLog(\"脚本已停止运行\");*/\n}\n",
    "scriptName": "【聚合大师】（八合一版）"
}]